# read last line of temp data text file

#  TO DO
#  ignore nan
#  colorbar and/or
#  overlay in a video

import numpy as np
import matplotlib.pyplot as plt
from matplotlib_colorbar.colorbar import ColorBar
import picamera
from PIL import Image
import ImageEnhance
from time import sleep
import time
import gtk.gdk

with picamera.PiCamera() as camera:
    camera.resolution = (640, 480)
    camera.framerate = 20
    camera.start_preview(fullscreen=False, window = (0, 0, 1650, 1200))

    # read data from text file
    file = open('/home/pi/mlxd/mlx90620.txt','r')
    #file = open('/home/pi/mlxd/testdata.txt','r')
    lineList = file.readlines()
    file.close()

    #map data to heatmap
    data = map(float, lineList[-2].split(','))
    data_shape = np.reshape(data,(16,4))
    datashape = np.rot90(data_shape)

    # create figure
    sizes = np.shape(datashape)
    height = float(sizes[0])
    width = float(sizes[1])
     
    fig = plt.figure()
    fig.set_size_inches(width/height, 1, forward=False)
    ax = plt.Axes(fig, [0., 0., 1., 1.])
    ax.set_axis_off()
    fig.add_axes(ax)

    ax.imshow(datashape, cmap='hot', interpolation='nearest')
    mapped_data = ax.imshow(datashape, cmap='hot', interpolation='nearest')
    # ax.imshow(datashape, cmap='hot', interpolation='nearest')
    plt.savefig('/home/pi/mlxd/Photos/Required/tempdata.jpg')
    plt.close()

    # create overlay image
    img = Image.open('/home/pi/mlxd/Photos/Required/tempdata.jpg')

    pad = Image.new('RGB', (
        ((img.size[0] + 31) // 32) * 32,
        ((img.size[1] + 15) // 16) * 16,
        ))
    # Paste the original image into the padded one
    pad.paste(img, (0, 0))

    o = camera.add_overlay(pad.tostring(), size=img.size)
    o.alpha = 128
    o.layer = 3
                    
    while True:
        sleep(0.25)
        
        # read data from text file
        file = open('/home/pi/mlxd/mlx90620.txt','r')
        #file = open('/home/pi/mlxd/testdata.txt','r')
        lineList = file.readlines()
        file.close()

        #map data to heatmap
        data = map(float, lineList[-2].split(','))
        data_shape = np.reshape(data,(16,4))
        datashape = np.rot90(data_shape)

        # create figure
        sizes = np.shape(datashape)
        height = float(sizes[0])
        width = float(sizes[1])
         
        fig = plt.figure()
        fig.set_size_inches(width/height, 1, forward=False)
        ax = plt.Axes(fig, [0., 0., 1., 1.])
        ax.set_axis_off()
        fig.add_axes(ax)

        ax.imshow(datashape, cmap='hot', interpolation='nearest')
        mapped_data = ax.imshow(datashape, cmap='hot', interpolation='nearest')
        # ax.imshow(datashape, cmap='hot', interpolation='nearest')
        plt.savefig('/home/pi/mlxd/Photos/Required/tempdata.jpg')
        plt.close()

        # create overlay image
        img = Image.open('/home/pi/mlxd/Photos/Required/tempdata.jpg')

        pad = Image.new('RGB', (
            ((img.size[0] + 31) // 32) * 32,
            ((img.size[1] + 15) // 16) * 16,
            ))
        # Paste the original image into the padded one
        pad.paste(img, (0, 0))
        o.update(pad.tostring())
                    
    print('Error! Closing...')
    camera.remove_overlay(o)
    fifo.close()

